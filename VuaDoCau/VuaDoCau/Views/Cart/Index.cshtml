@using VuaDoCau.Models
@model IEnumerable<CartItem>

@{
    ViewData["Title"] = "Giỏ hàng";

    // Đọc giá theo tên thuộc tính hiện có trong CartItem.
    // Mặc định dùng Price; nếu null thì 0.
    decimal UnitPriceOf(CartItem x)
        => x == null ? 0m : (decimal)(x.GetType().GetProperty("Price")?.GetValue(x) ?? 0m);

    // Đọc tên sản phẩm theo thuộc tính Name (mặc định); nếu null thì "(Sản phẩm)".
    string NameOf(CartItem x)
        => x == null ? "(Sản phẩm)" : (string)(x.GetType().GetProperty("Name")?.GetValue(x) ?? "(Sản phẩm)");

    string FormatVND(decimal v) => $"{v:N0}VND";
}

<style>
    /* Rộng, rõ ràng cho input số lượng */
    .qty-input {
        width: 110px;
        max-width: 140px;
        min-width: 90px;
        text-align: center;
        font-weight: 600;
        letter-spacing: .3px;
    }
    /* Hiển thị spinner rõ ràng trên Chrome/Edge */
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        opacity: 1;
        height: auto;
    }

    .cart-actions .btn {
        min-width: 90px;
    }
</style>

<div class="container py-4">
    <h1 class="mb-4">Giỏ hàng</h1>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">Giỏ hàng của bạn đang trống.</div>
        <a asp-controller="Products" asp-action="Index" class="btn btn-primary">Tiếp tục mua sắm</a>
    }
    else
    {
        <div class="table-responsive">
            <table class="table align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Sản phẩm</th>
                        <th class="text-end">Giá</th>
                        <th class="text-center">Số lượng</th>
                        <th class="text-end">Tổng giá</th>
                        <th class="text-center" style="width: 60px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var unit = UnitPriceOf(item);
                        var lineTotal = unit * item.Quantity;
                        <tr>
                            <td>
                                <div class="fw-semibold">@NameOf(item)</div>
                            </td>
                            <td class="text-end">@FormatVND(unit)</td>
                            <td class="text-center">
                                <form asp-controller="Cart" asp-action="Update" method="post" class="d-inline-flex gap-2 cart-actions">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <input type="number"
                                           class="form-control qty-input"
                                           name="quantity"
                                           value="@item.Quantity"
                                           min="1" step="1" />
                                    <button type="submit" class="btn btn-outline-secondary">Áp dụng</button>
                                </form>
                            </td>
                            <td class="text-end fw-semibold">@FormatVND(lineTotal)</td>
                            <td class="text-center">
                                <form asp-controller="Cart" asp-action="Remove" method="post" class="d-inline" onsubmit="return confirm('Xóa @NameOf(item) khỏi giỏ?');">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <button type="submit" class="btn btn-link text-danger p-0" title="Xóa">
                                        <span aria-hidden="true">✕</span>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @{
                        var sub = Model.Sum(x => UnitPriceOf(x) * x.Quantity);
                        var ship = 0m; // chỉnh nếu có ship
                        var total = sub + ship;
                    }
                    <tr>
                        <th colspan="3" class="text-end">Tạm tính</th>
                        <th class="text-end">@FormatVND(sub)</th>
                        <th></th>
                    </tr>
                    <tr>
                        <th colspan="3" class="text-end">Phí ship</th>
                        <th class="text-end">@FormatVND(ship)</th>
                        <th></th>
                    </tr>
                    <tr class="table-light">
                        <th colspan="3" class="text-end fs-5">Tổng cộng</th>
                        <th class="text-end fs-5">@FormatVND(total)</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex gap-2 justify-content-end">
            <form asp-controller="Cart" asp-action="Clear" method="post" onsubmit="return confirm('Xóa toàn bộ giỏ hàng?');">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-outline-danger">Xóa giỏ hàng</button>
            </form>
            <a asp-controller="Products" asp-action="Index" class="btn btn-outline-secondary">Tiếp tục mua sắm</a>
            <a asp-controller="Orders" asp-action="Checkout" class="btn btn-primary">Thanh toán</a>
        </div>
    }
</div>
